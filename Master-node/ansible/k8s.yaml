---
  - hosts: all
    vars:
      apim_component_name: ps
    become: 'yes'
    tasks:
      - name: Install k8s
        command: "sudo kubeadm init --pod-network-cidr=10.240.0.0/16 --ignore-preflight-errors=all"
        become: yes
        register: k8_output
        when: "'Master' in group_names"
  
      - debug:
          var: k8_output
        when: "'Master' in group_names"
  
      - name: create dir
        file:
          path: ~/.kube
          state: directory
        when: "'Master' in group_names"
  
      - name: copy kube conf
        copy:
          src: /etc/kubernetes/admin.conf
          dest: ~/.kube/config
          remote_src: yes
        when: "'Master' in group_names"
  
      - name: change owner
        file:
          path: ~/.kube/config
          owner: root
          group: root
        when: "'Master' in group_names"
  
      - name: get cert Hash
        shell: "openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'"
        register: cert_hash
        when: "'Master' in group_names"
  
      - debug:
          var: cert_hash.stdout
        when: "'Master' in group_names"
  
      - name: gen token
        command: "kubeadm token create"
        register: token
        when: "'Master' in group_names"
  
      - debug:
          msg: "kubeadm join --token {{ hostvars[groups.Master[0]].token.stdout }} {{ hostvars[groups.Master[0]].ansible_facts.default_ipv4.address }}:6443 --discovery-token-ca-cert-hash sha256:{{ hostvars[groups.Master[0]].cert_hash.stdout }} --ignore-preflight-errors=all"
  
      - name: Join Nodes to Cluster
        command: "kubeadm join --token {{ hostvars[groups.Master[0]].token.stdout }} {{ hostvars[groups.Master[0]].ansible_facts.default_ipv4.address }}:6443 --discovery-token-ca-cert-hash sha256:{{ hostvars[groups.Master[0]].cert_hash.stdout }} --ignore-preflight-errors=all"
        when: "'Workers' in group_names"
        register: worker_out
  
      - debug:
          var: worker_out
  
      - name: get nodes
        command: "kubectl get nodes"
        register: nodes
        when: "'Master' in group_names"
  
      - debug:
          var: nodes.stdout_lines
        when: "'Master' in group_names"